apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      securityContext:
        fsGroup: 1000  # Ensures group ownership permissions
      containers:
        - name: vault
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          ports:
            - containerPort: 8200
          env:
            - name: VAULT_STORAGE_POSTGRES_HOST
              value: "postgresql"
            - name: VAULT_STORAGE_POSTGRES_PORT
              value: "{{ .Values.service.postgresqlPort }}"
            - name: VAULT_STORAGE_POSTGRES_USER
              value: "{{ .Values.postgresql.env.POSTGRES_USER }}"
            - name: VAULT_STORAGE_POSTGRES_PASSWORD
              value: "{{ .Values.postgresql.env.POSTGRES_PASSWORD }}"
            - name: VAULT_STORAGE_POSTGRES_DATABASE
              value: "{{ .Values.postgresql.env.POSTGRES_DB }}"
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: false  # Ensure root filesystem is writable
          volumeMounts:
            - name: config
              mountPath: /vault/config
            - name: vault-data
              mountPath: /vault/data
      volumes:
        - name: config
          configMap:
            name: vault-config
        - name: vault-data
          persistentVolumeClaim:
            claimName: vault-pvc
